<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog de Fabio Rueda</title><link>http://blog.fabio.rueda.guru/</link><description></description><atom:link href="http://blog.fabio.rueda.guru/feeds/fabio-rueda.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 30 Oct 2014 10:20:00 +0100</lastBuildDate><item><title>Haciendo la vida facil al psql</title><link>http://blog.fabio.rueda.guru/haciendo-la-vida-facil-al-psql.html</link><description>&lt;p&gt;Para los que usamos el cliente psql, hay ciertas "mejoras" o customizaciones que me gustaria compartir, todas (como muchas otras) se escriben en el fichero ~/.psqlrc, puedes descargar el &lt;a href="https://raw.githubusercontent.com/avances123/dotfiles/master/postgresql/psqlrc"&gt;mio&lt;/a&gt; si quieres!&lt;/p&gt;
&lt;h4&gt;Distintos historicos&lt;/h4&gt;
&lt;p&gt;Al igual que el bash_history, guardaremos un historial de los comandos en un fichero, pero por defecto los guardamos en ~/.psql_history, con esta linea los separaremos por base de datos. Asi tendremos un ~/.psql_history-mydb1,~/.psql_history-mydb2 y no se mezclaran entre varias bases de datos.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;HISTFILE&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;psql_history&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;DBNAME&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Aumentar las lineas de historico&lt;/h4&gt;
&lt;p&gt;Almacenamos mas queries que por defecto&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;HISTSIZE&lt;/span&gt; &lt;span class="mi"&gt;20000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Mejoramos el prompt&lt;/h4&gt;
&lt;p&gt;En la linea de comandos podremos ver a que base de datos y host estamos conectados:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;\set PROMPT1 &amp;#39;%M %n@%/%R%#%x &amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El resultado es:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[local] fabio@tests=# 
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Coloreamos el null&lt;/h4&gt;
&lt;p&gt;Cuando usamos pgsl, los nulos salen como una cadena vacia y no vemos nada, podremos reemplazar el null por cualquier valor que queramos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;\pset null &amp;#39;[NULL]&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El resultado es:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;[local] fabio@tests=#&lt;/span&gt; &lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="k"&gt;values&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="go"&gt;INSERT 0 1&lt;/span&gt;
&lt;span class="gp"&gt;[local] fabio@tests=#&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="go"&gt; id |  bar   &lt;/span&gt;
&lt;span class="go"&gt;----+--------&lt;/span&gt;
&lt;span class="go"&gt;  1 | [NULL]&lt;/span&gt;
&lt;span class="go"&gt;(1 fila)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Demasiadas columnas para mi consola&lt;/h4&gt;
&lt;p&gt;Si queremos que psql nos cambie a formato extendido automaticamente cuando haya demasiadas columnas pondremos esto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;\x auto
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Confirmar la salida&lt;/h4&gt;
&lt;p&gt;Si hemos creado tablas temporales o cosas propias de nuestra sesion, no queremos salirnos por error, para ello tendremos que pulsar ctrl+D 3 veces en lugar de una.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;\set IGNOREEOF 3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El resultado es este:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; fabio@tests&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# Use «\q» para salir de psql.&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; fabio@tests&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# Use «\q» para salir de psql.&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; fabio@tests&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c"&gt;# \q&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fabio Rueda</dc:creator><pubDate>Thu, 30 Oct 2014 10:20:00 +0100</pubDate><guid>tag:blog.fabio.rueda.guru,2014-10-30:haciendo-la-vida-facil-al-psql.html</guid><category>postgresql</category><category>pqgsl</category><category>dotfiles</category></item><item><title>Protractor en legacy code</title><link>http://blog.fabio.rueda.guru/protractor-en-legacy-code.html</link><description>&lt;h3&gt;Introduccion&lt;/h3&gt;
&lt;p&gt;Digamos que entras en un proyecto donde existe una aplicacion con varios años en produccion, que usa como unicas librerias require y jQuery, todo lo demas esta hecho a mano, ademas como puedes suponer, no tiene ni un solo test.&lt;/p&gt;
&lt;p&gt;Nos proponemos hacer tests sobre el codigo existente y asi implantarlos para futuras features.&lt;/p&gt;
&lt;h3&gt;WebdriverJs (Selenium)&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://docs.seleniumhq.org/projects/webdriver/"&gt;Selenium&lt;/a&gt; es un driver que automatiza interacciones con el explorador&lt;/p&gt;
&lt;p&gt;Lo instalaremos y ejecutaremos como un paquete de nodejs, de esta manera&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo npm install -g webdriver-manager
sudo webdriber-manager update 
sudo webdriber-manager start
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Protractor&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.org/package/protractor"&gt;Protractor&lt;/a&gt; es un sistemas para ejecutar test e2e de aplicaciones angularjs, es decir, abre un explorador, (o no), y hace cliks, rellena campos y lo que haria el usuario de manera automatica. Como wrapper de selenium para angularjs, diremos que tambien se puede usar para aplicaciones no-angularjs&lt;/p&gt;
&lt;p&gt;Lo instalamos en el sistema:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo npm install -g protractor
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y despues creamos un fichero de configuracion, como no tenemos angular hay que configurarlo con un par de cosillas&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Diremos donde estan nuestros ficheros con tests de Jasmine en la variable specs&lt;/li&gt;
&lt;li&gt;Y despues le diremos nuestros delays en la aplicacion, y que se olvide de la sincronizacion que hace con una app angular&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// conf.js&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;seleniumAddress&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://localhost:4444/wd/hub&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;specs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;spec.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

  &lt;span class="nx"&gt;onPrepare&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// implicit and page load timeouts&lt;/span&gt;
    &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;timeouts&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;pageLoadTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;timeouts&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;implicitlyWait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// for non-angular page&lt;/span&gt;
    &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ignoreSynchronization&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Maximized chrome window&lt;/span&gt;
    &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;driver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;maximize&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Un test sencillo&lt;/h3&gt;
&lt;p&gt;Ahora crearemos un test sencillo, sacado el tutorial de protractor (muy util), en nuestro fichero specs.js:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;angularjs homepage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;should have a title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://juliemr.github.io/protractor-demo/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;browser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTitle&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Super Calculator&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y ejecutamos protractor:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;protractor conf.js
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Chrome y PhantomJS&lt;/h3&gt;
&lt;p&gt;Hasta ahora estamos viendo nuestra ventana de chrome pasando los tests, pero si quisieramos pasarlos en un servidor de integracion continua, deberiamos usar un explorador headless, ya que es posible que este servidor no tenga servidor grafico para GUIs.&lt;/p&gt;
&lt;p&gt;Para eso usaremos phantomjs, como en los anteriores paquetes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo npm install -g phantomjs
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cambiaremos nuestro conf.js para que use phantomjs y ya lo tendremos headless.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fabio Rueda</dc:creator><pubDate>Thu, 30 Oct 2014 10:20:00 +0100</pubDate><guid>tag:blog.fabio.rueda.guru,2014-10-30:protractor-en-legacy-code.html</guid><category>tests</category><category>jasmine</category><category>nodejs</category><category>js</category><category>javascript</category><category>e2e</category><category>selenium</category><category>protractor</category></item></channel></rss>