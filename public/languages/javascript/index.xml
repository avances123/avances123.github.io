<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on avances123</title>
    <link>http://blog.fabio.xyz/languages/javascript/</link>
    <description>Recent content in javascript on avances123</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Sat, 12 Mar 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.fabio.xyz/languages/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tablas hash en C,Javascript y Python</title>
      <link>http://blog.fabio.xyz/post/antiguos/rendimiento-tablas-hash-en-c-javascript-python/</link>
      <pubDate>Sat, 12 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.fabio.xyz/post/antiguos/rendimiento-tablas-hash-en-c-javascript-python/</guid>
      <description>Un amigo necesitaba hacer una funcion hash para un problema concreto, como os podeis imaginar, el problema consistia en que necesitaba buscar en un diccionario muchisimas claves, este proceso necesitaba ser lo mas rapido posible, y segun nuestro cariño a distintos lenguajes ,entre varios decidimos hacer un estudio sobre como resolver el problema usando varios: C, javascript y python, sin usar ninguna cosa rara, simplemente usando lo que el lenguaje permita hacer.</description>
    </item>
    
    <item>
      <title>Protractor en legacy code</title>
      <link>http://blog.fabio.xyz/post/antiguos/karma-y-jasmine-en-legacy-code/</link>
      <pubDate>Wed, 02 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.fabio.xyz/post/antiguos/karma-y-jasmine-en-legacy-code/</guid>
      <description>Haciendo tests e2e en apps que ya tenemos hechas Introduccion Digamos que entras en un proyecto donde existe una aplicacion con varios años en produccion, que usa como unicas librerias require y jQuery, todo lo demas esta hecho a mano, ademas como puedes suponer, no tiene ni un solo test.
Nos proponemos hacer tests sobre el codigo existente y asi implantarlos para futuras features.
WebdriverJs (Selenium) Selenium es un driver que automatiza interacciones con el explorador</description>
    </item>
    
  </channel>
</rss>
